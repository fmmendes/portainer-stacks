services:
  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    ports:
      - "9093:9093"
    environment:
      # Configure listeners for controller communication
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
    volumes:
      - controller-data:/var/lib/kafka/data

  controller-2:
    image: apache/kafka:latest
    container_name: controller-2
    ports:
      - "9094:9094"
    environment:
      # Configure listeners for controller communication
      KAFKA_LISTENERS: CONTROLLER://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
    volumes:
      - controller-2-data:/var/lib/kafka/data

  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - "9092:9092"
    environment:
      # Auto create topics on first use
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - broker-data:/var/lib/kafka/data
    depends_on:
      - controller-1
      - controller-2

  broker-2:
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - "9095:9095"
    environment:
      # Auto create topics on first use
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - broker-2-data:/var/lib/kafka/data
    depends_on:
      - controller-1
      - controller-2

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: broker-1:9092
      SERVER_SERVLET_CONTEXTPATH: /
    depends_on:
      - broker-1
      - broker-2

volumes:
  controller-data:
  controller-2-data:
  broker-data:
  broker-2-data: